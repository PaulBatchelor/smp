#+TITLE: Process
How does one listen to these waveforms and "rate" them?

Will meditate on this.
* TODO Ways to listen
** Preliminaries
First, some preliminaries:

A wavetable almost always going to used inside of an
oscillator for wavetable synthesis.

A wavetable provides a very cheap way of producing a wide
range of timbres.

Wavetables by themselves are spectrally static. They only
play one slice of a timbre at a time. Without some kind of
modulation, things get irritating.

Wavetable synthesizers are very easily prone to aliasing
artifacts, especially with the higher frequencies. Some work
can be done to supress this. However, I say embrace the
aliasing where it may appear... it's a part of digital
identity!
** The XY Pad: an ideal interface
I have found the XY pad to be a very expressive interface
for sound exploration, and I believe it to be one very
useful for exploring the timbres of wavetables.

The most basic use of an XY pad is to build a theremin-like
instrument, where the X axis controls pitch and the Y axis
controls amplitude or some kind of timbre control.
Our fingers, hands, and arms can work
well together to explore very nuanced gestures in a space
like this.

The main instrument for testing/exploration will be done
on a xp-pen g430s tablet with passive stylus. It's a cheap
20 dollar HID device that has a small form factor, ideal
for portable studios. To see this development, see
the @!(ref "xy" "xy")!@ instrument page.
** Paths of listening
So, we got the instrument, we got the wavetable loaded, what
now? How does one begin to listen and rate such a thing.

A wavetable should be experienced by itself with mainly
frequency as a control parameter. No effects, and minimal
use of articulation/dynamics. It is important to experience
the wavetable in the raw.

Start with a good full-range sweep of instrument. Take note
of any images or associations that come to mind, no matter
how unrelated they may seem. Any feelings about the sound?

Take note of the higher frequency space. Is there aliasing
noise? This means a lot of high frequency energy. It might
more suitable as a low frequency instrument.

Try listening to the oscillator at the lower end. Keep
in mind that everything usually sounds better at the lower
end, so ignore that instinct for a moment, and focus on the
details. Is the sound 'big-boned' like a tuba? Maybe it
sounds like a higher instrument because of the secondary
harmonics. Could this be a bass? Is it noisy? Does one
a sense of steady pitch?

Does the sound have any vocal-like qualities to it? Moving
the cursor around in a circle usually exposes this this. If
it does, it usually indicates that the waveform has formant
peaks.

Does the sound remind you have any of the classic waveforms?
sine, triangle, square/pulse, and sawtooth. I find these
categories to be limiting, but they can serve as a useful
starting point.

Does the sound remind you of any "realworld" instruments
like violins, flutes, trumpets, etc... Ones imagination
must be stretched here. My mind goes to the casio VL tone
family of synths claiming to make "guitar" and "violin"
sounds.
* Abstractions for use in composition
How do we make useful abstractions for use elsewhere? An on
going log.
** [2020-01-21 Tue 12:58]
The @!(ref "formants" "formants")!@ is ground zero for this.
I'm building scheme abstractions here that make it easier to
access filenames for wavetables in the SQLar database via
monolith.

These right now are literate programs AND wiki pages, so
they are getting managed in two ways, which is pretty cool
IMO.
** [2020-01-26 Sun 12:33] waveform combinations
It is clear to me that these waveforms work better together.
I have built a 3-stage morphing oscillator instrument for my
XY pad. 3 is the bare minimum to get the "effect" of timbre
morphing. 2 is too subtle and just sounds like crossfading
(it *is* crossfading, actually).

I have begun curating 3-waveform combinations inside of
scheme functions, and writing my observations. The first of
its kind is =fmt-comb0=, which was written in the
@!(ref "formants" "formants")!@ page. It uses the =lwt=
shortcut with the formant filename function utilities.

Eventually I'd want these to be easily exported to projects,
like color palettes. My next breathing card etude will
attempt to do just that.
** [2020-01-28 Tue 13:16] How to copy over wavetables
The approach I'm taking right now:

Mount the sqlar database with =make fuse=. Wavetables
will appear in =smp=.

Copy over specific wavetables individually to new location.

Add these files to a new SQLar database?

At some point, I may want to write a SQLite script that
copies files over from one SQLar to another.
